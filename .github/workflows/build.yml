name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        microservice:
          - dvd
          - laptop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ${{ matrix.microservice }}/gradlew

      - name: Build microservice
        run: |
          cd ${{ matrix.microservice }}
          ./gradlew build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.microservice }}
          file: ./${{ matrix.microservice }}/Dockerfile
          push: true
          tags: |
            docker.io/akan2096/rental-shop-${{ matrix.microservice }}
#  push:
#    needs: build
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        microservice:
#          - dvd
#          - laptop
#
#    steps:
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Push Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: ./${{ matrix.microservice }}
#          file: ./${{ matrix.microservice }}/Dockerfile
#          push: true
#          tags: |
#            docker.io/akan2096/your-repository/rental-shop-${{ matrix.microservice }}:${{ github.sha }}

#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        microservice:
#          - dvd
#          - laptop
#
#    steps:
#      - name: Set up Docker Compose
#        uses: docker/compose-action@v2
#        with:
#          compose-file: docker-compose.yml
#          environment: |
#            MICROSERVICE_IMAGE= docker.io/akan2096/rental-shop-${{ matrix.microservice }}
#      - name: Restart Docker Compose services
#        run: docker-compose up -d

            

